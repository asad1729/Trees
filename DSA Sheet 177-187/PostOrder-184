Recursion :
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) 
    {
        List<Integer> sol=new ArrayList<>();
        temp(root,sol);
        return sol;
        
    }
    private void temp(TreeNode root,List<Integer> sol)
    {
        if(root==null)return;
        temp(root.left,sol);
        temp(root.right,sol);
        sol.add(root.val);
    }
}


Iterative :
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) 
    {
        Stack<TreeNode> stack=new Stack<>();
        Stack<TreeNode> ans=new Stack<>();
        List<Integer> sol=new ArrayList<>();
        if(root==null)return sol;
        stack.push(root);
        while( !stack.isEmpty())
        {
            TreeNode temp=stack.pop();
            ans.add(temp);
            if(root.right!=null)
                stack.push(root.right);
            if(root.left!=null)
                stack.push(root.left);
        }
        while(!ans.isEmpty()){
            sol.add(ans.pop().val);
        }
        return sol;
    }
}
